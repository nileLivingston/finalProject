{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww18040\viewh18580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs50 \cf0 Game environment:\
	-Minimal yet functional UI\
\
	-Initialize and shuffle deck\
	-Deal 9 cards to each player: 3 down, 3 up, 3 hand\
	-Pregame round:\
		-Lag the AI agent so that the player has time to make swaps\
		-Heuristic swapping algorithm for AI is easy:\
			Swap Cards:\
				Let card value be ordered as follows:\
					4 < 5 < 6 < 7 < 8 < 9 < J < Q < K < A < 2 < 10 < 3\
				Loop:\
					Let x be the max-valued card in the hand\
					Let y be the min-valued card in the up cards\
					If x > y, replace y with x\
					Else, terminate			\
\
	-Keep track of active player \
	-Drawing automatic for both player and AI\
	-Autosort hand by rank\
	-layout (height x width) 5x13 grid of cards\
\
	-Option to select multiple cards of a playable rank\
	-If no legal turn, manually pick up pile\
	-Implement game environment and random agent by Monday, Nov 25th\
\
AI Ideas:\
	-Q learning(featurization of states)\
	-Minimax/reflex implementation?\
		-Eval function based on heuristics\
	-Train Q learner against reflex agent\
\
Heuristics:\
	-Naive: Turns that maximize cards played + cards in opponents hand\
		-Lost of cards in opponent\'92s hand = good for me\
	-Also naive: play smallest cards possible.\
\
	-Play 2\'92s only when needed.\
	-Get rid of cards as quickly as possible.\
		-If you have 7\'92s and 6\'92s, play 7\'92s if possible\
		-If you have multiple cards of rank X and at least one card that is 		playable on X, play all of them\
\
Important state information:\
	-Things accessible from the game environment:\
		-Cards in hand\
		-Up cards\
		-# of down cards for each player\
	-Things we must keep track of: \
		-Number of 3\'92s accounted for (in discard, hand, or up cards)\
		-Approximation of cards in opponent\'92s hand\
		-Discarded\
		\
	}